<div class="wrapper wrapper-content animated fadeInRight">
  <div class="row">
    <div class="col-lg-12">
      <div class="ibox float-e-margins">
        <div class="ibox-content text-center p-md">
          <h2><span class="text-navy">INSPINIA - Responsive Admin Theme</span>
            is provided with two main layouts <br>
            three skins and separate configure options.</h2>
          <p>
            All config options you can trun on/off from the theme box configuration (green icon on the left side of page).
          </p>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6">
      <div class="note-editing-area">
        <div class="note-handle">
          <div class="note-control-selection" style="display: none;">
            <div class="note-control-selection-bg"></div>
            <div class="note-control-holder note-control-nw"></div>
            <div class="note-control-holder note-control-ne"></div>
            <div class="note-control-holder note-control-sw"></div>
            <div class="note-control-sizing note-control-se"></div>
            <div class="note-control-selection-info"></div>
          </div>
        </div>
        <textarea class="note-codable"></textarea>
        <div class="note-editable panel-body" contenteditable="true">
          <h3>Hello Jonathan! </h3>
          dummy text of the printing and typesetting industry. <strong>Lorem Ipsum has been the industry's</strong> standard dummy text ever since the 1500s,
          when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic
          typesettiadadadng, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with
          <br>
          <br>
        </div>
      </div>
    </div>
    <div class="col-lg-6" id="tree">
    </div>
  </div>
</div>
<% content_for :javascript do %>
  <script>
    function getTree() {
        var data = [
      {
    text:"Parent 1",
    nodes: [
      {
        text:"Child 1",
        nodes: [
          {
            text:"Grandchild 1"
          },
          {
            text:"Grandchild 2"
          }
        ]
      },
      {
        text:"Child 2"
      }
    ]
      },
      {
    text:"Parent 2"
      },
      {
    text:"Parent 3"
      },
      {
    text:"Parent 4"
      },
      {
    text:"Parent 5"
      }
    ];
        return data;
    }
    
    $('#tree').treeview({data: getTree()});
  </script>
<% end %>